#!/bin/sh
# SPDX-License-Identifier: MIT
# Copyright (C) 2021 Roland Csaszar
#
# Project:  FSHARP_TEMPLATE
# File:     create_packages.yml
#
################################################################################

name: Nuget Packages

on:
  release:
    types: [created]

  push:
    tags:
      - 'v*.*.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: 5.0.x

      - name: Cache pip
        uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-FSHARP_TEMPLATE-pip-pipenv-${{ hashFiles('Pipfile.lock') }}
            restore-keys: |
                ${{ runner.os }}-FSHARP_TEMPLATE-pip-pipenv

      - name: Cache pipenv
        uses: actions/cache@v2
        with:
            path: ~/.local/share/virtualenvs
            key: ${{ runner.os }}-FSHARP_TEMPLATE-pipenv-${{ hashFiles('Pipfile.lock') }}
            restore-keys: |
                ${{ runner.os }}-FSHARP_TEMPLATE-pipenv-

      - name: Setup pipenv
        run: python -m pip install --upgrade pipenv

      - name: Setup MkDocs
        run: |
          cd $GITHUB_WORKSPACE
          python -m pipenv install --dev

      - name: Setup Tools
        run: |
            dotnet tool restore
            dotnet paket restore

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      - name: Build Package
        run: |
          cd $GITHUB_WORKSPACE
          dotnet fake run ./build.fsx target Packages $GIT_TAG_NAME

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./packages/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        run: |
          cd $GITHUB_WORKSPACE
          dotnet nuget push ./packages/*.nupkg -k ${{ secrets.NUGET_PACKAGE }} -s https://api.nuget.org/v3/index.json

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Nuget Packages
          path: ./packages/*
